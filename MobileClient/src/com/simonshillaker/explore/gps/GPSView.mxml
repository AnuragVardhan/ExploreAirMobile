<?xml version="1.0" encoding="utf-8"?>
<core:BackButtonView xmlns:core="com.simonshillaker.explore.core.*"
		xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		title="{ResourceBundleUtil.GPS_TITLE}"
		creationComplete="onCreationComplete(event)"
		removed="onHide()">

	<core:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center" paddingLeft="5" paddingRight="5"/>
	</core:layout>
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.LatLng;
			import com.google.maps.Map;
			import com.google.maps.MapEvent;
			import com.google.maps.MapType;
			import com.google.maps.controls.ScaleControl;
			import com.google.maps.controls.ZoomControl;
			import com.google.maps.overlays.Marker;
			import com.simonshillaker.explore.core.PageInfo;
			import com.simonshillaker.explore.core.ResourceBundleUtil;
			import com.simonshillaker.explore.core.SourceURLs;
			import com.simonshillaker.explore.maps.GoogleMapsConstants;
			
			import flash.sensors.Geolocation;
			
			import mx.events.FlexEvent;
			
			private var geolocation:Geolocation;
			
			private var map:Map;
			
			private var latitude:Number;
			private var longitude:Number;
			private var heading:Number;
			private var altitude:Number;
			private var speed:Number;
			
			[Bindable]
			private var infoText:String = "";
			[Bindable]
			private var isGpsSupported:Boolean = true;
			[Bindable]
			private var isMapReady:Boolean = false;
			[Bindable]
			private var isBusy:Boolean = false;
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				info = new PageInfo(title,
					ResourceBundleUtil.GPS_INFO,
					SourceURLs.GPS);				
			}
			
			private function findMeHandler(event:MouseEvent):void
			{
				isBusy = false;
				findMeButton.visible = false;
				findMeButton.includeInLayout = false;
				warningLabel.visible = false;
				warningLabel.includeInLayout = false;
				
				validateNow();
				
				initialise();
			}
			
			protected function initialise():void
			{
				isGpsSupported = initialiseGeolocation();
				
				if(!isGpsSupported)
				{
					isBusy = false;
					return;
				}
				
				validateNow();
				
				initialiseMap();
			}
			
			private function initialiseGeolocation():Boolean
			{
				if(Geolocation.isSupported)
				{
					geolocation = new Geolocation();
					
					if(geolocation.muted)
					{
						infoText = ResourceBundleUtil.GPS_NOT_ENABLED;
						return false;
					}
					
					geolocation.addEventListener(GeolocationEvent.UPDATE, handleGeolocationUpdate);
					return true;
				}
				else 
				{
					infoText = ResourceBundleUtil.GPS_NOT_SUPPORTED;
					return false;
				}
				
			}

			private function handleGeolocationUpdate(event:GeolocationEvent):void
			{
				latitude = event.latitude;
				longitude = event.longitude;
				heading = event.heading;
				altitude = event.altitude;
				speed= event.speed;
				
				if(isMapReady)
				{
					map.setCenter(new LatLng(latitude, longitude), 14, MapType.NORMAL_MAP_TYPE);
					var marker:Marker = new Marker(new LatLng(latitude, longitude));
					map.addOverlay(marker);
				}
			}
			
			private function initialiseMap():void
			{
				map = new Map();
				map.sensor = "false";
				map.url = GoogleMapsConstants.SITE_URL;
				map.key = GoogleMapsConstants.APP_KEY;
				
				map.addEventListener(MapEvent.MAP_READY, handleMapReady);

				map.percentHeight = 100;
				map.percentWidth = 100;

				mapGroup.addElement(map);
				
				invalidateDisplayList();
			}
			
			private function handleMapReady(event:MapEvent):void
			{
				map.addControl(new ScaleControl());
				map.addControl(new ZoomControl());

				isMapReady = true;
				isBusy = false;
			}
			
			private function onHide():void
			{
				if(map)
				{
					map.unload();
				}
				if(geolocation)
				{
					geolocation.removeEventListener(GeolocationEvent.UPDATE, handleGeolocationUpdate);
				}
			}
			
		]]>
	</fx:Script>

	<s:Label id="warningLabel" width="100%" 
			 text="{ResourceBundleUtil.GPS_WARNING_LABEL}" />
	
	<s:Button id="findMeButton" 
			  label="{ResourceBundleUtil.FIND_ME_BUTTON_LABEL}" 
			  width="100%" 
			  click="findMeHandler(event)"/>
	
	<s:BusyIndicator visible="{isBusy}" includeInLayout="{isBusy}"/>
	
	<s:Label id="infoLabel"
			 text="{infoText}" 
			 visible="{!isGpsSupported}" includeInLayout="{!isGpsSupported}" />
	
	<s:Group id="mapGroup" 
			 width="100%" height="100%" 
			 visible="{isMapReady}" includeInLayout="{isMapReady}"/>	

</core:BackButtonView>
