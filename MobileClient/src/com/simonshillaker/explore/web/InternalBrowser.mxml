<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:core="com.simonshillaker.explore.core.*"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="onCreationComplete(event)" 
		remove="onRemove()"
		tabBarVisible="false"
		title="{resourceManager.getString('explore_air_mobile', 'internal_browser_title')}">
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			import mx.resources.IResourceManager;
			import mx.resources.ResourceManager;
			
			[Bindable]
			public var webView:StageWebView;
			
			[Bindable]
			private var isLoading:Boolean = true;
			
			[Bindable]
			private var isError:Boolean = false;
			
			private var isViewSideways:Boolean = false;
			
			private function onCreationComplete(event:FlexEvent):void 
			{
				if(!StageWebView.isSupported) {
					errorLabel.text = resourceManager.getString('explore_air_mobile','internal_browser_not_supported');
					this.enabled = false;
				}
				
				webView = new StageWebView();
				webView.loadURL(resourceManager.getString('explore_air_mobile', 'web_default_url'));
				webView.addEventListener(ErrorEvent.ERROR, handleWebError);
				webView.addEventListener(Event.COMPLETE, handleWebSuccess);
				
				stage.addEventListener(StageOrientationEvent.ORIENTATION_CHANGE, handleOrientationChange);
				
			}
			
			private function sizeWebView():void
			{
				var placeHolderXY:Point = new Point(webViewPlaceholder.x, webViewPlaceholder.y);
				var webViewXY:Point = browserContainer.localToGlobal(placeHolderXY); 
				
				webView.viewPort = new Rectangle(webViewXY.x, 
					webViewXY.y, 
					webViewPlaceholder.width, 
					webViewPlaceholder.height);
			}
			
			protected function handleOrientationChange(event:StageOrientationEvent):void
			{
				sizeWebView();
			}
			
			private function handleWebError(event:ErrorEvent):void
			{
				isLoading = false
				isError = true;
			}
			
			private function handleWebSuccess(event:Event):void
			{
				webView.stage = stage;
				
				if(!webView.viewPort)
				{
					sizeWebView();
				}
				
				isLoading = false;
				isError = false;
			}
			
			protected function goToUrl():void
			{
				if(webView)
				{
					webView.stop();
					webView.stage = null;
					isError = false;
					isLoading = true;
					webView.loadURL(urlInput.text);
				}
			}
			
			private function historyBack():void
			{
				if(webView && webView.isHistoryBackEnabled)
				{
					isLoading = true;
					isError = false;
					webView.historyBack();
				}
			}
			
			private function historyForward():void
			{
				if(webView && webView.isHistoryForwardEnabled)
				{
					isLoading = true;
					isError = false;
					webView.historyForward();
				}
			}
			
			private function onRemove():void
			{
				webView.dispose();
				isLoading = false;
				isError = false;
			}
			
			override protected function get resourceManager():IResourceManager
			{
				return ResourceManager.getInstance();
			}
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<s:Button id="backButton" visible="{navigator.length &gt; 1}"
				  label="{resourceManager.getString('explore_air_mobile','back_label')}"
				  click="navigator.popView()" includeInLayout="{navigator.length &gt; 1}"/>
	</s:navigationContent>

	<s:VGroup id="browserContainer" width="100%" height="100%" >
		<s:HGroup id="navBar" width="100%">
			<s:Button id="historyBackButton" width="40" height="40"
				  	label="{resourceManager.getString('explore_air_mobile', 'nav_back_label')}"
				  	click="historyBack()"/>
			
			<s:Button id="historyForwardButton" width="40" height="40"
				  	label="{resourceManager.getString('explore_air_mobile', 'nav_forward_label')}"
				  	click="historyForward()"/>
			
			<s:TextInput id="urlInput" width="100%" height="40" enter="goToUrl()" prompt="Enter a URL"/>
			
			<s:Button id="goToURLButton" width="60" height="40" label="Go" click="goToUrl()"/>
		
		</s:HGroup>
	
		<s:Group id="webViewPlaceholder" width="100%" height="100%" />
	</s:VGroup>
	
	<s:BusyIndicator visible="{isLoading}" horizontalCenter="0" verticalCenter="0"/>
	
	<s:Label id="errorLabel" visible="{isError}" horizontalCenter="0"
			 text="{resourceManager.getString('explore_air_mobile','internal_browser_invalid_url')}"
			 verticalCenter="0"/>
	
</s:View>